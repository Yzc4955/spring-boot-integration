/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.9/userguide/custom_plugins.html
 */

plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'

    // codeGen gradle plugin
    id 'com.codegen.gradle.plugin' version '1.0.0'
}

version '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'

    // mybatisGen
    implementation 'org.mybatis.generator:mybatis-generator-core:1.4.0'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'com.codegen.gradle.plugin'
            implementationClass = 'com.yangzc.gradle.plugin.PluginManager'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
